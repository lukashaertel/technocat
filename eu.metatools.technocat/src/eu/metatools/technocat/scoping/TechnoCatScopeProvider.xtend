/*
 * generated by Xtext
 */
package eu.metatools.technocat.scoping

import eu.metatools.technocat.technoCat.TechnologyCatalog
import org.eclipse.emf.ecore.EReference
import org.eclipse.xtext.scoping.Scopes
import org.eclipse.xtext.scoping.impl.AbstractDeclarativeScopeProvider

import static extension eu.metatools.technocat.reasoning.TechnoCatScopes.*

/**
 * This class contains custom scoping description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation.html#scoping
 * on how and when to use it 
 *
 */
class TechnoCatScopeProvider extends AbstractDeclarativeScopeProvider {

	def scope_ETD(TechnologyCatalog it, EReference r) {
		Scopes::scopeFor(effectiveETDs)
	}

	def scope_RTD(TechnologyCatalog it, EReference r) {
		Scopes::scopeFor(effectiveRTDs)
	}

	def scope_RTDItem(TechnologyCatalog it, EReference r) {
		Scopes::scopeFor(effectiveRTDItems)
	}

	def scope_ED(TechnologyCatalog it, EReference r) {
		Scopes::scopeFor(effectiveEDs)
	}

	def scope_EDItem(TechnologyCatalog it, EReference r) {
		Scopes::scopeFor(effectiveEDItems)
	}
}
